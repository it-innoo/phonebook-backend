{"version":3,"sources":["components/Notification.js","services/names.js","App.js","index.js"],"names":["Notification","_ref","message","type","react_default","a","createElement","className","baseUrl","names","axios","get","then","response","data","newObject","post","id","delete","concat","Filter","handleChange","value","onChange","Persons","_ref2","persons","deletePerson","map","p","key","name","number","onClick","PersonForm","props","onSubmit","handleSubmit","handleNameChange","newName","handleNumberChange","newNumber","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","filter","setFilter","_useState9","_useState10","setMessage","useEffect","nameService","initialNames","notify","arguments","length","undefined","setTimeout","personsToShow","toLowerCase","includes","components_Notification","App_Filter","event","target","App_PersonForm","preventDefault","createdPerson","returnedPerspn","catch","error","App_Persons","person","find","window","confirm","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.39ff3716.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = ({ message, type }) => {\n  if (message.message === null) {\n    return null\n  }\n\n  return (\n    <div className={message.type}>\n      {message.message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n// const baseUrl = 'https://afternoon-retreat-83428.herokuapp.com/api/persons'\n// const baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst replace = (person) => {\n  const request = axios.put(`${baseUrl}/${person.id}`, person)\n\n  return request.then(response => response.data)\n}\nexport default { getAll, create, remove, replace }\n","import React, { useState, useEffect } from 'react'\nimport Notification from './components/Notification'\nimport nameService from './services/names'\n\n\nconst Filter = ({ handleChange, value }) => {\n  return (\n    <div>\n      Rajaa näytettäviä\n      <input onChange={handleChange} value={value} />\n    </div>\n  )\n}\n\n\nconst Persons = ({ persons, deletePerson }) => {\n  return (\n    persons.map(p =>\n      <div key={p.name}>\n        {p.name} {p.number}\n        <button onClick={() => deletePerson(p.id)}>\n          Poista\n          </button>\n      </div>\n    )\n\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        Nimi:\n          <input\n          onChange={props.handleNameChange} value={props.newName}\n        />\n      </div>\n      <div>\n        Numero:\n          <input\n          onChange={props.handleNumberChange} value={props.newNumber}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">Lisää</button>\n      </div>\n    </form>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState({ message: null })\n\n  useEffect(() => {\n    nameService\n      .getAll()\n      .then(initialNames => {\n        setPersons(initialNames)\n      })\n  }, [])\n\n  const handleNameChange = (event) =>\n    setNewName(event.target.value)\n\n  const handleNumberChange = (event) =>\n    setNewNumber(event.target.value)\n\n  const handleFilterChange = (event) =>\n    setFilter(event.target.value)\n\n  const notify = (message, type = 'success') => {\n    setMessage({ message, type })\n    setTimeout(() => setMessage({ message: null }), 10000)\n  }\n  const personsToShow = filter.length === 0\n    ? persons\n    : persons.filter(p =>\n      p.name.toLowerCase().includes(filter.toLowerCase()))\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    /*\n        const existingPerson = persons.find(p =>\n          p.name === newName\n        )\n    \n        if (existingPerson) {\n          const ok = window.confirm(`${newName} on jo luettelossa, korvataanko vanha numero uudella`)\n    \n          if (ok) {\n            nameService\n              .replace({\n                ...existingPerson,\n                number: newNumber\n              })\n              .then(replacedPerson => {\n                setPersons(persons.map(p => p.name === newName ? replacedPerson : p))\n                setNewName('')\n                setNewNumber('')\n                notify(`Henkilön ${newName} numero muutettu`, 'success')\n              })\n              .catch(error => {\n                notify(error.response.data.error, 'error')\n              })\n          }\n          return\n        }\n    */\n    const createdPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    nameService\n      .create(createdPerson)\n      .then(returnedPerspn => {\n        setPersons(persons.concat(returnedPerspn))\n        setNewName('')\n        setNewNumber('')\n        notify(`Lisätty ${createdPerson.name}`)\n      })\n      .catch(error => {\n        notify(error.response.data.error, 'error')\n        setNewName('')\n        setNewNumber('')\n      })\n  }\n\n  const removeName = (id) => {\n    const person = persons.find(p => p.id === id)\n    if (window.confirm(`Poistetaanko ${person.name} `)) {\n      nameService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== id))\n          notify(`Poistettu ${person.name}`)\n        })\n        .catch(error => {\n          notify(error.response.data.error, 'error')\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h1>Puhelinluettelo</h1>\n\n      <Notification message={message} />\n\n      <Filter handleChange={handleFilterChange} value={filter} />\n\n      <h3>lisää uusi</h3>\n\n      <PersonForm\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        handleSubmit={handleSubmit}\n        newName={newName}\n        newNumber={newNumber}\n      />\n\n      <h2>Numerot</h2>\n\n      <Persons\n        persons={personsToShow}\n        deletePerson={removeName}\n      />\n    </div >\n  )\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}